import type { NextPage } from 'next'
import Head from 'next/head'

import { User, getAuth } from "firebase/auth";
import { FirebaseApp, initializeApp } from "firebase/app";
import React from 'react';


const Home: NextPage = () => {
  const [_firebaseUI, setFirebaseUi] = React.useState<typeof import("/home/barto/Dev/lab/firebase/node_modules/react-firebaseui/StyledFirebaseAuth")>();
  const [firebaseApp, setFirebaseApp] = React.useState<FirebaseApp>();
  const [user, setUser] = React.useState<User>();
  const [token, setToken] = React.useState<String>();

  const [error, setError] = React.useState<String>();
  const [dataValue, setDataValue] = React.useState<any>();
  const [logedUser, setLogedUser] = React.useState<boolean>(false);
  const [games, setGames] = React.useState<any[]>([]);
  const [gameScores, setGameScores] = React.useState<any[]>([]);

  const uiConfig: firebaseui.auth.Config = {
    signInFlow: 'popup',
    signInOptions: [
      "google.com",
    ],
    callbacks: {
      signInSuccessWithAuthResult: (authResult) => {
        if(authResult.user) {
          doLogin(authResult.user);
          // setUser(authResult.user)
        }
        else setError("No user in authResult")
        return false
      }
    }
  };

  const doLogin = (user: User) => {
    // do a POST fetch with body!
    fetch("/api/login", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(user.providerData[0])
    }).then((response) => response.json()).then((data) => {
      setToken(data.token);
      setLogedUser(true);
      setUser(user)
    }).catch((error) => {
      alert("ERRORR");
    })
  }

  React.useEffect(() => {
    if(logedUser) {
      fetch("/api/games", {
        method: "GET",
        headers: {
          "Authorization": `Bearer ${token}`,
        },
      }).then((response) => response.json()).then((data) => {
        setGames(data.games);
        getAllScores();
      }).catch((error) => {
        alert("ERRORR, games");
      })
    }
  }, [logedUser]);

  React.useEffect(() => {
    import("react-firebaseui/StyledFirebaseAuth").then((module) => {
        setFirebaseUi(module)
    });

    const firebaseConfig = {
      apiKey: "REEPLAZAR",
      authDomain: "",
      projectId: "",
      storageBucket: "",
      messagingSenderId: "",
      appId: "",
      measurementId: ""
    };

    const app = initializeApp(firebaseConfig);
    setFirebaseApp(app);

  }, [])

  const getAllScores = () => {
    fetch("/api/scores", {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${token}`,
      },
    }).then((response) => response.json()).then((data) => {
      setGameScores(data.scoreItems);
    }).catch((error) => {
      alert("ERRORR, all scores");
    })

  }
  const setScoreForThisGame = (game: any) => {
    fetch("/api/score", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${token}`,
      },
      body: JSON.stringify({
        game: game.firebaseId,
        value: 100,
      }),
      
    }).then((response) => response.json()).then((data) => {
      getAllScores();
    }).catch((error) => {
      alert("ERRORR, games");
    })
  }

  const getScoreFor = (gameId: string) => {
    const score = gameScores.find((score) => score.id === gameId);
    return score?.value ?? 0;
  }

  return (
    <>
      <Head>
        <title>Firebase Noswar</title>
        <meta name="description" content="Generated by create next app with love and Noswar" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={"container"}>

        <div className="row">
          <div className="col-12 col-md-6">
            <h1 className={"mt-4"}>
            Noswar Games
            </h1>
            {firebaseApp && _firebaseUI && (<_firebaseUI.default  firebaseAuth={getAuth(firebaseApp)} uiConfig={uiConfig} />)}
          </div>
        </div>


        {
          user && (
            <div>
              <h2>Usuario</h2>
              <p>{user.displayName}</p>
              <p>{user.email}</p>
              <p>{user.uid}</p>
              {user.photoURL && (<img src={user.photoURL} alt={user.displayName ?? ""} />)}
            </div>
          )
        }
        {
          error && (
            <div>
              <h2>Error</h2>
              <p>{error}</p>
            </div>
          )
        }

        {(logedUser && games.length > 0) ? (
          <div>
            <h2>Games</h2>
            <ul>
              {games.map((game: any) => (
                <li onClick={() => setScoreForThisGame(game)} key={game.firebaseId}>
                  <div className='d-flex justify-content-between'>
                    <div className='name'>{game.name}</div>
                    <div className='score'>{getScoreFor(game.firebaseId)}</div>
                  </div>
                </li>
              ))}
            </ul>
          </div>
        
        ) : (logedUser) ? <p>Cargando</p> : <p>Logueate</p>}
        

      </main>

    </>
  )
}

export default Home
